#Script to autopick on image basis and index locs accordingly
import os
import numpy as np
import pandas as pd
import importlib

import picasso.io
import picasso.render as render
import lbfcs.io
import lbfcs.picasso_wrap as pic_wrap
import lbfcs.pyplot_wrap as plt_wrap

importlib.reload(pic_wrap)
importlib.reload(plt_wrap)

############################################################## Load datafile

dir_name='/fs/pool/pool-schwille-paint/Data/p06.SP-tracking/19-11-07_th_p-exp-scan_PEG3k20%/id169_R1-54#_R1s1-8_20nM_exp100_p114uW_1/19-11-07_FS'
file_name='id169_R1-54#_R1s1-8_20nM_exp100_p114uW_1_MMStack_Pos0.ome_locs_filter_render.hdf5'

path=os.path.join(dir_name,file_name) 
locs,info=picasso.io.load_locs(path)

#%%
############################################################## Render image
print('Rendering locs for pick detection ...')
oversampling=5
image=render.render(locs,
                    info,
                    oversampling=oversampling,
#                    blur_method='gaussian',
#                    min_blur_width=0.05,
                    )[1]

#%%
############################################################## Preview picks (without fitting)
#### Spot detection settings
box=11
mng=1500
pick_diameter=1.6
#### Contrast settings
contrast_min=0
contrast_max=100

#### Show preview
ax=plt_wrap._image_preview(image,
                           contrast_min=contrast_min,
                           contrast_max=contrast_max,
                           fignum=13
                           )
spots=pic_wrap._spots_in_image(image,mng,box)
plt_wrap._spots_preview(spots,ax)
ax.set_xlim(100,700)

ax.set_ylim(100,700)


#%%
############################################################## Detect picks
print('Pick detection ...')
picks=pic_wrap._spots_in_image(image,mng,box,fit=False)

#### Save picks
lbfcs.io._save_picks(pic_wrap._coordinate_convert(picks,
                                                  (0,0),
                                                  oversampling),
                     pick_diameter,
                     os.path.splitext(path)[0]+'_autopick.yaml')

############################################################## Show picks (with fitting)
#ax=plt_wrap._image_preview(image,
#                           contrast_min=contrast_min,
#                           contrast_max=contrast_max,
#                           fignum=14)
#plt_wrap._spots_preview(picks,
#                        ax)
#ax.set_xlim(200,600)
#ax.set_ylim(200,600)
#%%
############################################################## Get locs_picked and save
print('Indexing & sorting ...')
centers=np.vstack([picks.x,picks.y]).transpose()/oversampling
picks_idx=pic_wrap._query_locs_for_centers(locs, # Query locs for pick centers
                                           centers,
                                           pick_radius=0.5*pick_diameter) 
locs_picked=pic_wrap._get_picked(pd.DataFrame(locs),picks_idx) # Assing index to locs

#### Dropping, type conversion and sorting
locs_picked=locs_picked.loc[locs_picked.group>=0,:] # Drop all unassigned localizations i.e. group==-1
locs_picked=locs_picked.astype({'group':np.uint32}) # Convert to right dtype
locs_picked.sort_values(['group','frame'],inplace=True) # Sort

#### Save locs_picked
print('Saving _picked ...')
info_picked=info.copy()+[{'Pick diameter':pick_diameter,
                          'Oversampling':oversampling,
                          'box':box,
                          'mng':mng,
                          'Generated by':'autopick.py'}]
picasso.io.save_locs(os.path.splitext(path)[0]+'_picked.hdf5',
                     locs_picked.to_records(index=False),
                     info_picked,
                     )
