#Script to autopick on image basis and index locs accordingly

import os
import picasso.io as _io
import picasso.render as render
import numpy as np
import importlib
import lbfcs.picasso_wrap as pic_wrap
importlib.reload(pic_wrap)

############################################################## Load data
dir_name='/fs/pool/pool-schwille-paint/Data/p10.ClickReceptor/19-09-20_id155_TETRA-P3/id155_S1-TCO-TETRA-P3-30min_P3-20nM_green-35uW_2/'
file_name='id155_S1-TCO-TETRA-P3-30min_P3-20nM_green-35uW_2_MMStack_Pos0.ome_locs_render.hdf5'

path=os.path.join(dir_name,file_name) 
locs,info=_io.load_locs(path)

#%%
############################################################## Render image
print('Rendering locs for pick detection ...')
oversampling=5
image=render.render(locs,
                    info,
                    oversampling=oversampling,
                    )[1]

#%%
############################################################## Preview picks (without fitting)
#### Spot detection settings
box=9
mng=300
pick_diameter=2

#### Image settings
contrast_min=0
contrast_max=50
view=[(1000,1000),(400,400)]

#### Show preview
ax=pic_wrap._image_preview(image,
                           view,
                           contrast_min=contrast_min,
                           contrast_max=contrast_max,
                           fignum=13)
spots=pic_wrap._spots_in_image(image,mng,box)
pic_wrap._spots_preview(spots,
                       ax)

#%%
############################################################## Detect picks
print('Pick detection ...')
picks=pic_wrap._spots_in_image(image,mng,box,fit=True)

#### Save picks
save_picks=picks.copy()
save_picks.x=save_picks.x/oversampling # Conversion to original pixel size
save_picks.y=save_picks.y/oversampling # Conversion to original pixel size
pic_wrap._locs2picks(save_picks,
                     pick_diameter,
                     os.path.splitext(path)[0]+'_autopick.yaml')

#%%
############################################################## Show picks (with fitting)
ax=pic_wrap._image_preview(image,
                           view,
                           contrast_min=contrast_min,
                           contrast_max=contrast_max,
                           fignum=14)
pic_wrap._spots_preview(picks,
                       ax)

#%%
############################################################## Get locs_picked and save
print('Indexing & sorting ...')
centers=np.vstack([picks.x,picks.y]).transpose()/oversampling
locs_picked=pic_wrap._get_picked(locs,centers,pick_diameter*0.5)

#### Save locs_picked
print('Saving _picked ...')
info_picked=info.copy()
info_picked=info_picked+[{'Pick diameter':pick_diameter,'Oversampling':oversampling,'box':box,'mng':mng,'Generated by':'autopick.py'}]
_io.save_locs(os.path.splitext(path)[0]+'_picked.hdf5',
             locs_picked.to_records(index=False),
             info_picked,
             )
