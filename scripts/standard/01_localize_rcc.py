#Script to call localize and undrift by RCC
import os
import importlib
import picasso.io as _io
import picasso.postprocess as _postprocess
import picasso.render as render
import lbfcs.picasso_wrap as pic_wrap
importlib.reload(pic_wrap)
#%%
############################################# Load raw data
dir_name='/fs/pool/pool-schwille-paint/Data/p10.ClickReceptor/19-09-20_id155_TETRA-P3/id155_S1-TCO-TETRA-P3-3d_P3-20nM_green-35uW_1/'
file_name='id155_S1-TCO-TETRA-P3-3d_P3-20nM_green-35uW_1_MMStack_Pos1.ome.tif'

path=os.path.join(dir_name,file_name) 
movie, info = _io.load_movie(path)

#%%
############################################# Preview spots
#### Spot detection settings
box=5
mng=400
#### Image settings
frame=3
contrast_min=70
contrast_max=350
view=[(350,350),(350,350)]

#### Show preview
ax=pic_wrap._image_preview(movie[frame],
                          view,
                          contrast_min,
                          contrast_max)

spots=pic_wrap._spots_in_image(movie[frame],mng,box)
pic_wrap._spots_preview(spots,
                       ax)

#%%
############################################# Localize
spots,locs=pic_wrap._localize_movie(movie,box,mng)

#### Save locs
info_locs=info.copy()
info_locs=info_locs+[{'Box Size':box,'Generated by':'localize_rcc.py','Min. Net Gradient': mng}]
_io.save_locs(os.path.splitext(path)[0]+'_locs.hdf5',
             locs,
             info_locs,
             )

#%%
############################################# Preview locs
##### Render settings
oversampling=5
contrast_min=0
contrast_max=30

#### Show preview
image=render.render(locs,
                    info,
                    oversampling=oversampling,
                    )[1]
ax=pic_wrap._image_preview(image,
                           view,
                           contrast_min=contrast_min,
                           contrast_max=contrast_max,
                           fignum=13)

#%%
############################################# Undrift by RCC
segmentation=500
drift,locs_render=_postprocess.undrift(locs,
                     info,
                     segmentation,
                     display=True,
                     segmentation_callback=None,
                     rcc_callback=None,
                     )

#### Save locs_render
info_locs_render=info_locs.copy()
info_locs_render=info_locs_render+[{'Segmentation':segmentation,'Generated by':'localize_rcc.py'}]
_io.save_locs(os.path.splitext(path)[0]+'_locs_render.hdf5',
             locs_render,
             info_locs_render,
             )

#%%
############################################# Preview locs_render
#### Show preview
image=render.render(locs_render,
                    info,
                    oversampling=oversampling,
                    )[1]
ax=pic_wrap._image_preview(image,
                           view,
                           contrast_min=contrast_min,
                           contrast_max=contrast_max,
                           fignum=14)